# name: test/sql/read_otlp_json.test
# description: Test read_otlp_*() table functions with JSON files (v2 schema)
# group: [sql]

require duckspan

# Test that all three table functions exist
query I
SELECT COUNT(*) FROM duckdb_functions() WHERE function_name IN ('read_otlp_traces', 'read_otlp_logs', 'read_otlp_metrics');
----
3

#
# Traces Tests
#

# Test reading traces - verify row count
query I
SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl');
----
3

# Test traces schema - verify key column types
query IIIII
SELECT
    typeof(Timestamp) as ts_type,
    typeof(TraceId) as trace_id_type,
    typeof(SpanId) as span_id_type,
    typeof(ServiceName) as service_type,
    typeof(Duration) as duration_type
FROM read_otlp_traces('test/data/traces_simple.jsonl')
LIMIT 1;
----
TIMESTAMP_NS	VARCHAR	VARCHAR	VARCHAR	BIGINT

# Test traces content - verify specific values
query III
SELECT
    LENGTH(TraceId) > 0 as has_trace_id,
    LENGTH(SpanId) > 0 as has_span_id,
    ServiceName = 'test-service' as correct_service
FROM read_otlp_traces('test/data/traces_simple.jsonl')
LIMIT 1;
----
true	true	true

# Test traces - verify span name extraction
query I
SELECT COUNT(*)
FROM read_otlp_traces('test/data/traces_simple.jsonl')
WHERE SpanName LIKE '%users%';
----
2

# Test traces - verify duration is calculated
query I
SELECT COUNT(*)
FROM read_otlp_traces('test/data/traces_simple.jsonl')
WHERE Duration > 0;
----
3

#
# Logs Tests
#

# Test reading logs - verify row count
query I
SELECT COUNT(*) FROM read_otlp_logs('test/data/logs_simple.jsonl');
----
3

# Test logs schema - verify key column types
query IIII
SELECT
    typeof(Timestamp) as ts_type,
    typeof(ServiceName) as service_type,
    typeof(SeverityText) as severity_type,
    typeof(Body) as body_type
FROM read_otlp_logs('test/data/logs_simple.jsonl')
LIMIT 1;
----
TIMESTAMP_NS	VARCHAR	VARCHAR	VARCHAR

# Test logs content - verify specific values
query II
SELECT
    ServiceName = 'test-service' as correct_service,
    LENGTH(Body) > 0 as has_body
FROM read_otlp_logs('test/data/logs_simple.jsonl')
LIMIT 1;
----
true	true

# Test logs - verify severity levels
query I
SELECT COUNT(*)
FROM read_otlp_logs('test/data/logs_simple.jsonl')
WHERE SeverityText IN ('INFO', 'WARN', 'ERROR');
----
3

#
# Metrics Tests
#

# Test reading metrics - verify row count (3 metrics: sum, gauge, histogram)
# read_otlp_metrics() uses union schema (27 columns) to support all metric types
query I
SELECT COUNT(*) FROM read_otlp_metrics('test/data/metrics_simple.jsonl');
----
3

# Test metrics union schema - verify MetricType discriminator column
query I
SELECT COUNT(DISTINCT MetricType) FROM read_otlp_metrics('test/data/metrics_simple.jsonl');
----
3

# Test metrics - verify we can filter by metric type
query I
SELECT COUNT(*) FROM read_otlp_metrics('test/data/metrics_simple.jsonl')
WHERE MetricType = 'gauge';
----
1
