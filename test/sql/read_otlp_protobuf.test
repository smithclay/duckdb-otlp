# name: test/sql/read_otlp_protobuf.test
# description: Test reading OTLP protobuf files (v2 schema)
# group: [sql]

#
# Note: A benign protobuf UTF-8 validation warning may appear during test initialization.
# This is a false positive from protobuf's wire format validation and does not affect
# functionality. The warning states: "String field 'opentelemetry.proto.trace.v1.Span.name'
# contains invalid UTF-8 data" but the data is valid ASCII/UTF-8.

require duckspan

#
# Traces Tests
#

# Test reading traces protobuf - verify schema and row count
query I
SELECT COUNT(*)
FROM read_otlp_traces('test/data/otlp_traces.pb');
----
1

# Test traces schema - verify key column types
query IIIII
SELECT
    typeof(Timestamp) as ts_type,
    typeof(TraceId) as trace_id_type,
    typeof(SpanName) as name_type,
    typeof(ServiceName) as service_type,
    typeof(Duration) as duration_type
FROM read_otlp_traces('test/data/otlp_traces.pb')
LIMIT 1;
----
TIMESTAMP_NS	VARCHAR	VARCHAR	VARCHAR	BIGINT

# Test traces - verify timestamp is extracted from protobuf
query I
SELECT Timestamp::VARCHAR LIKE '2021-01-01%'
FROM read_otlp_traces('test/data/otlp_traces.pb');
----
true

# Test traces - verify service name extraction
query I
SELECT ServiceName IN ('test-service', 'trace-service')
FROM read_otlp_traces('test/data/otlp_traces.pb');
----
true

# Test traces - verify TraceId and SpanId are non-empty
query II
SELECT
    LENGTH(TraceId) > 0 as has_trace_id,
    LENGTH(SpanId) > 0 as has_span_id
FROM read_otlp_traces('test/data/otlp_traces.pb');
----
true	true

#
# Metrics Tests
#

# Test reading metrics protobuf - verify row count
# read_otlp_metrics() uses union schema (27 columns) to support all metric types
query I
SELECT COUNT(*)
FROM read_otlp_metrics('test/data/otlp_metrics.pb');
----
1

# Test metrics protobuf - verify MetricType column exists
query I
SELECT LENGTH(MetricType) > 0
FROM read_otlp_metrics('test/data/otlp_metrics.pb');
----
true

#
# Logs Tests
#

# Test reading logs protobuf - verify row count
query I
SELECT COUNT(*)
FROM read_otlp_logs('test/data/otlp_logs.pb');
----
1

# Test logs schema - verify key column types
query IIII
SELECT
    typeof(Timestamp) as ts_type,
    typeof(ServiceName) as service_type,
    typeof(SeverityText) as severity_type,
    typeof(Body) as body_type
FROM read_otlp_logs('test/data/otlp_logs.pb')
LIMIT 1;
----
TIMESTAMP_NS	VARCHAR	VARCHAR	VARCHAR

# Test logs - verify service name extraction
query I
SELECT ServiceName IN ('test-service', 'logs-service', 'log-service')
FROM read_otlp_logs('test/data/otlp_logs.pb');
----
true

# Test logs - verify body content is not empty
query I
SELECT LENGTH(Body) > 0
FROM read_otlp_logs('test/data/otlp_logs.pb');
----
true
