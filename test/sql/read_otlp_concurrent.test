# name: test/sql/read_otlp_concurrent.test
# description: test concurrent access and parallel scanning
# group: [sql]

require otlp

### Basic Parallel Scan Tests ###

# Test parallel read of same file in multiple subqueries
query I
SELECT
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl'))
AS total_count;
----
9

# Test parallel read of different files
query I
SELECT
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_nulls.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/single_trace.jsonl'))
AS total_count;
----
7

# Test parallel metrics reads
query I
SELECT
    (SELECT COUNT(*) FROM read_otlp_metrics_gauge('test/data/metrics_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_metrics_sum('test/data/metrics_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_metrics_histogram('test/data/metrics_simple.jsonl'))
AS total_count;
----
3

### Union/Join Operations (Implicit Parallelism) ###

# Test UNION of multiple file reads
query I
SELECT COUNT(*) FROM (
    SELECT * FROM read_otlp_traces('test/data/traces_simple.jsonl')
    UNION ALL
    SELECT * FROM read_otlp_traces('test/data/traces_nulls.jsonl')
);
----
6

# Test JOIN across different OTLP data types
query I
SELECT COUNT(*)
FROM read_otlp_traces('test/data/traces_simple.jsonl') t
JOIN read_otlp_logs('test/data/logs_simple.jsonl') l
ON t.TraceId = l.TraceId;
----
6

### Glob Pattern Parallel Scanning ###

# Test glob pattern (DuckDB parallelizes file-level)
query I
SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_*.jsonl');
----
8

# Test glob with metrics
query I
SELECT COUNT(*) FROM read_otlp_metrics('test/data/metrics_*.jsonl');
----
15

# Test glob with logs
query I
SELECT COUNT(*) FROM read_otlp_logs('test/data/logs_*.jsonl');
----
6

### Aggregation with Parallel Scan ###

# Test aggregation over glob pattern
query II
SELECT SpanKind, COUNT(*) as count
FROM read_otlp_traces('test/data/traces_*.jsonl')
GROUP BY SpanKind
ORDER BY SpanKind;
----
UNSPECIFIED	8

# Test metrics aggregation over multiple files
query II
SELECT MetricType, COUNT(*) as count
FROM read_otlp_metrics('test/data/metrics_*.jsonl')
GROUP BY MetricType
ORDER BY MetricType;
----
exponential_histogram	2
gauge	3
histogram	4
sum	4
summary	2

### Error Statistics with Parallel Scans ###

# Run parallel scans then check stats
statement ok
SELECT * FROM read_otlp_traces('test/data/traces_simple.jsonl');

statement ok
SELECT * FROM read_otlp_logs('test/data/logs_simple.jsonl');

statement ok
SELECT * FROM read_otlp_metrics('test/data/metrics_simple.jsonl');

# Verify scan stats are accessible
query I
SELECT COUNT(*) FROM read_otlp_scan_stats();
----
1

### Mixed on_error Modes in Parallel ###

# Test different error modes in same query
query I
SELECT
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl', on_error := 'fail')) +
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_nulls.jsonl', on_error := 'skip')) +
    (SELECT COUNT(*) FROM read_otlp_traces('test/data/single_trace.jsonl', on_error := 'nullify'))
AS total_count;
----
7

### Concurrent Typed Metrics Helpers ###

# Test all typed helpers concurrently
query I
SELECT
    (SELECT COUNT(*) FROM read_otlp_metrics_gauge('test/data/metrics_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_metrics_sum('test/data/metrics_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_metrics_histogram('test/data/metrics_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_metrics_exp_histogram('test/data/metrics_simple.jsonl')) +
    (SELECT COUNT(*) FROM read_otlp_metrics_summary('test/data/metrics_simple.jsonl'))
AS total_count;
----
3

### CTEs with Multiple Scans ###

# Test Common Table Expressions with parallel scans
query I
WITH
    traces AS (SELECT COUNT(*) as cnt FROM read_otlp_traces('test/data/traces_simple.jsonl')),
    logs AS (SELECT COUNT(*) as cnt FROM read_otlp_logs('test/data/logs_simple.jsonl')),
    metrics AS (SELECT COUNT(*) as cnt FROM read_otlp_metrics('test/data/metrics_simple.jsonl'))
SELECT traces.cnt + logs.cnt + metrics.cnt
FROM traces, logs, metrics;
----
9

### Window Functions Over Parallel Scans ###

# Test window functions (DuckDB may parallelize)
query I
SELECT COUNT(DISTINCT SpanName)
FROM read_otlp_traces('test/data/traces_*.jsonl');
----
8

### Subquery Correlation ###

# Test correlated subquery with OTLP reads
query I
SELECT COUNT(*) FROM (
    SELECT
        SpanName,
        (SELECT COUNT(*) FROM read_otlp_traces('test/data/traces_simple.jsonl') WHERE SpanName = t.SpanName) as same_name_count
    FROM read_otlp_traces('test/data/traces_simple.jsonl') t
);
----
3
