// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: opentelemetry/proto/collector/logs/v1/logs_service.proto
// Protobuf C++ Version: 5.29.5

#include "opentelemetry/proto/collector/logs/v1/logs_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace opentelemetry {
namespace proto {
namespace collector {
namespace logs {
namespace v1 {

inline constexpr ExportLogsPartialSuccess::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : error_message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        rejected_log_records_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExportLogsPartialSuccess::ExportLogsPartialSuccess(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportLogsPartialSuccessDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportLogsPartialSuccessDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportLogsPartialSuccessDefaultTypeInternal() {}
  union {
    ExportLogsPartialSuccess _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportLogsPartialSuccessDefaultTypeInternal _ExportLogsPartialSuccess_default_instance_;

inline constexpr ExportLogsServiceResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        partial_success_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR ExportLogsServiceResponse::ExportLogsServiceResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportLogsServiceResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportLogsServiceResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportLogsServiceResponseDefaultTypeInternal() {}
  union {
    ExportLogsServiceResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportLogsServiceResponseDefaultTypeInternal _ExportLogsServiceResponse_default_instance_;

inline constexpr ExportLogsServiceRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : resource_logs_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExportLogsServiceRequest::ExportLogsServiceRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExportLogsServiceRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExportLogsServiceRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExportLogsServiceRequestDefaultTypeInternal() {}
  union {
    ExportLogsServiceRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExportLogsServiceRequestDefaultTypeInternal _ExportLogsServiceRequest_default_instance_;
}  // namespace v1
}  // namespace logs
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceRequest, _impl_.resource_logs_),
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceResponse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceResponse, _impl_.partial_success_),
        0,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess, _impl_.rejected_log_records_),
        PROTOBUF_FIELD_OFFSET(::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess, _impl_.error_message_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceRequest)},
        {9, 18, -1, sizeof(::opentelemetry::proto::collector::logs::v1::ExportLogsServiceResponse)},
        {19, -1, -1, sizeof(::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::opentelemetry::proto::collector::logs::v1::_ExportLogsServiceRequest_default_instance_._instance,
    &::opentelemetry::proto::collector::logs::v1::_ExportLogsServiceResponse_default_instance_._instance,
    &::opentelemetry::proto::collector::logs::v1::_ExportLogsPartialSuccess_default_instance_._instance,
};
const char descriptor_table_protodef_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n8opentelemetry/proto/collector/logs/v1/"
    "logs_service.proto\022%opentelemetry.proto."
    "collector.logs.v1\032&opentelemetry/proto/l"
    "ogs/v1/logs.proto\"\\\n\030ExportLogsServiceRe"
    "quest\022@\n\rresource_logs\030\001 \003(\0132).opentelem"
    "etry.proto.logs.v1.ResourceLogs\"u\n\031Expor"
    "tLogsServiceResponse\022X\n\017partial_success\030"
    "\001 \001(\0132\?.opentelemetry.proto.collector.lo"
    "gs.v1.ExportLogsPartialSuccess\"O\n\030Export"
    "LogsPartialSuccess\022\034\n\024rejected_log_recor"
    "ds\030\001 \001(\003\022\025\n\rerror_message\030\002 \001(\t2\235\001\n\013Logs"
    "Service\022\215\001\n\006Export\022\?.opentelemetry.proto"
    ".collector.logs.v1.ExportLogsServiceRequ"
    "est\032@.opentelemetry.proto.collector.logs"
    ".v1.ExportLogsServiceResponse\"\000B\230\001\n(io.o"
    "pentelemetry.proto.collector.logs.v1B\020Lo"
    "gsServiceProtoP\001Z0go.opentelemetry.io/pr"
    "oto/otlp/collector/logs/v1\252\002%OpenTelemet"
    "ry.Proto.Collector.Logs.V1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto_deps[1] =
    {
        &::descriptor_table_opentelemetry_2fproto_2flogs_2fv1_2flogs_2eproto,
};
static ::absl::once_flag descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto = {
    false,
    false,
    754,
    descriptor_table_protodef_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto,
    "opentelemetry/proto/collector/logs/v1/logs_service.proto",
    &descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto_once,
    descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto_deps,
    1,
    3,
    schemas,
    file_default_instances,
    TableStruct_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto::offsets,
    file_level_enum_descriptors_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto,
    file_level_service_descriptors_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto,
};
namespace opentelemetry {
namespace proto {
namespace collector {
namespace logs {
namespace v1 {
// ===================================================================

class ExportLogsServiceRequest::_Internal {
 public:
};

void ExportLogsServiceRequest::clear_resource_logs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resource_logs_.Clear();
}
ExportLogsServiceRequest::ExportLogsServiceRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExportLogsServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::opentelemetry::proto::collector::logs::v1::ExportLogsServiceRequest& from_msg)
      : resource_logs_{visibility, arena, from.resource_logs_},
        _cached_size_{0} {}

ExportLogsServiceRequest::ExportLogsServiceRequest(
    ::google::protobuf::Arena* arena,
    const ExportLogsServiceRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportLogsServiceRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
}
inline PROTOBUF_NDEBUG_INLINE ExportLogsServiceRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : resource_logs_{visibility, arena},
        _cached_size_{0} {}

inline void ExportLogsServiceRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ExportLogsServiceRequest::~ExportLogsServiceRequest() {
  // @@protoc_insertion_point(destructor:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
  SharedDtor(*this);
}
inline void ExportLogsServiceRequest::SharedDtor(MessageLite& self) {
  ExportLogsServiceRequest& this_ = static_cast<ExportLogsServiceRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* ExportLogsServiceRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExportLogsServiceRequest(arena);
}
constexpr auto ExportLogsServiceRequest::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExportLogsServiceRequest, _impl_.resource_logs_) +
          decltype(ExportLogsServiceRequest::_impl_.resource_logs_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(ExportLogsServiceRequest), alignof(ExportLogsServiceRequest), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExportLogsServiceRequest::PlacementNew_,
                                 sizeof(ExportLogsServiceRequest),
                                 alignof(ExportLogsServiceRequest));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExportLogsServiceRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExportLogsServiceRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExportLogsServiceRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExportLogsServiceRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExportLogsServiceRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExportLogsServiceRequest>(), &ExportLogsServiceRequest::ByteSizeLong,
            &ExportLogsServiceRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExportLogsServiceRequest, _impl_._cached_size_),
        false,
    },
    &ExportLogsServiceRequest::kDescriptorMethods,
    &descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExportLogsServiceRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ExportLogsServiceRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::logs::v1::ExportLogsServiceRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .opentelemetry.proto.logs.v1.ResourceLogs resource_logs = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(ExportLogsServiceRequest, _impl_.resource_logs_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .opentelemetry.proto.logs.v1.ResourceLogs resource_logs = 1;
    {PROTOBUF_FIELD_OFFSET(ExportLogsServiceRequest, _impl_.resource_logs_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opentelemetry::proto::logs::v1::ResourceLogs>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExportLogsServiceRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.resource_logs_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportLogsServiceRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportLogsServiceRequest& this_ = static_cast<const ExportLogsServiceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportLogsServiceRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportLogsServiceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .opentelemetry.proto.logs.v1.ResourceLogs resource_logs = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_resource_logs_size());
               i < n; i++) {
            const auto& repfield = this_._internal_resource_logs().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportLogsServiceRequest::ByteSizeLong(const MessageLite& base) {
          const ExportLogsServiceRequest& this_ = static_cast<const ExportLogsServiceRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportLogsServiceRequest::ByteSizeLong() const {
          const ExportLogsServiceRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .opentelemetry.proto.logs.v1.ResourceLogs resource_logs = 1;
            {
              total_size += 1UL * this_._internal_resource_logs_size();
              for (const auto& msg : this_._internal_resource_logs()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportLogsServiceRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportLogsServiceRequest*>(&to_msg);
  auto& from = static_cast<const ExportLogsServiceRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_resource_logs()->MergeFrom(
      from._internal_resource_logs());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportLogsServiceRequest::CopyFrom(const ExportLogsServiceRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportLogsServiceRequest::InternalSwap(ExportLogsServiceRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.resource_logs_.InternalSwap(&other->_impl_.resource_logs_);
}

::google::protobuf::Metadata ExportLogsServiceRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportLogsServiceResponse::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ExportLogsServiceResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExportLogsServiceResponse, _impl_._has_bits_);
};

ExportLogsServiceResponse::ExportLogsServiceResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
}
inline PROTOBUF_NDEBUG_INLINE ExportLogsServiceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::opentelemetry::proto::collector::logs::v1::ExportLogsServiceResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

ExportLogsServiceResponse::ExportLogsServiceResponse(
    ::google::protobuf::Arena* arena,
    const ExportLogsServiceResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportLogsServiceResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.partial_success_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess>(
                              arena, *from._impl_.partial_success_)
                        : nullptr;

  // @@protoc_insertion_point(copy_constructor:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
}
inline PROTOBUF_NDEBUG_INLINE ExportLogsServiceResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void ExportLogsServiceResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.partial_success_ = {};
}
ExportLogsServiceResponse::~ExportLogsServiceResponse() {
  // @@protoc_insertion_point(destructor:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
  SharedDtor(*this);
}
inline void ExportLogsServiceResponse::SharedDtor(MessageLite& self) {
  ExportLogsServiceResponse& this_ = static_cast<ExportLogsServiceResponse&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.partial_success_;
  this_._impl_.~Impl_();
}

inline void* ExportLogsServiceResponse::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExportLogsServiceResponse(arena);
}
constexpr auto ExportLogsServiceResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ExportLogsServiceResponse),
                                            alignof(ExportLogsServiceResponse));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExportLogsServiceResponse::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExportLogsServiceResponse_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExportLogsServiceResponse::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExportLogsServiceResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExportLogsServiceResponse::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExportLogsServiceResponse>(), &ExportLogsServiceResponse::ByteSizeLong,
            &ExportLogsServiceResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExportLogsServiceResponse, _impl_._cached_size_),
        false,
    },
    &ExportLogsServiceResponse::kDescriptorMethods,
    &descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExportLogsServiceResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> ExportLogsServiceResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExportLogsServiceResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::logs::v1::ExportLogsServiceResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess partial_success = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ExportLogsServiceResponse, _impl_.partial_success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess partial_success = 1;
    {PROTOBUF_FIELD_OFFSET(ExportLogsServiceResponse, _impl_.partial_success_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void ExportLogsServiceResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.partial_success_ != nullptr);
    _impl_.partial_success_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportLogsServiceResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportLogsServiceResponse& this_ = static_cast<const ExportLogsServiceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportLogsServiceResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportLogsServiceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess partial_success = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.partial_success_, this_._impl_.partial_success_->GetCachedSize(), target,
                stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportLogsServiceResponse::ByteSizeLong(const MessageLite& base) {
          const ExportLogsServiceResponse& this_ = static_cast<const ExportLogsServiceResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportLogsServiceResponse::ByteSizeLong() const {
          const ExportLogsServiceResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

           {
            // .opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess partial_success = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.partial_success_);
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportLogsServiceResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportLogsServiceResponse*>(&to_msg);
  auto& from = static_cast<const ExportLogsServiceResponse&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.partial_success_ != nullptr);
    if (_this->_impl_.partial_success_ == nullptr) {
      _this->_impl_.partial_success_ =
          ::google::protobuf::Message::CopyConstruct<::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess>(arena, *from._impl_.partial_success_);
    } else {
      _this->_impl_.partial_success_->MergeFrom(*from._impl_.partial_success_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportLogsServiceResponse::CopyFrom(const ExportLogsServiceResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentelemetry.proto.collector.logs.v1.ExportLogsServiceResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportLogsServiceResponse::InternalSwap(ExportLogsServiceResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.partial_success_, other->_impl_.partial_success_);
}

::google::protobuf::Metadata ExportLogsServiceResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ExportLogsPartialSuccess::_Internal {
 public:
};

ExportLogsPartialSuccess::ExportLogsPartialSuccess(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
}
inline PROTOBUF_NDEBUG_INLINE ExportLogsPartialSuccess::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess& from_msg)
      : error_message_(arena, from.error_message_),
        _cached_size_{0} {}

ExportLogsPartialSuccess::ExportLogsPartialSuccess(
    ::google::protobuf::Arena* arena,
    const ExportLogsPartialSuccess& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExportLogsPartialSuccess* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.rejected_log_records_ = from._impl_.rejected_log_records_;

  // @@protoc_insertion_point(copy_constructor:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
}
inline PROTOBUF_NDEBUG_INLINE ExportLogsPartialSuccess::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : error_message_(arena),
        _cached_size_{0} {}

inline void ExportLogsPartialSuccess::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.rejected_log_records_ = {};
}
ExportLogsPartialSuccess::~ExportLogsPartialSuccess() {
  // @@protoc_insertion_point(destructor:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
  SharedDtor(*this);
}
inline void ExportLogsPartialSuccess::SharedDtor(MessageLite& self) {
  ExportLogsPartialSuccess& this_ = static_cast<ExportLogsPartialSuccess&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.error_message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ExportLogsPartialSuccess::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ExportLogsPartialSuccess(arena);
}
constexpr auto ExportLogsPartialSuccess::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ExportLogsPartialSuccess),
                                            alignof(ExportLogsPartialSuccess));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ExportLogsPartialSuccess::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ExportLogsPartialSuccess_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ExportLogsPartialSuccess::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ExportLogsPartialSuccess>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ExportLogsPartialSuccess::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ExportLogsPartialSuccess>(), &ExportLogsPartialSuccess::ByteSizeLong,
            &ExportLogsPartialSuccess::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ExportLogsPartialSuccess, _impl_._cached_size_),
        false,
    },
    &ExportLogsPartialSuccess::kDescriptorMethods,
    &descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ExportLogsPartialSuccess::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 84, 2> ExportLogsPartialSuccess::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::opentelemetry::proto::collector::logs::v1::ExportLogsPartialSuccess>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string error_message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(ExportLogsPartialSuccess, _impl_.error_message_)}},
    // int64 rejected_log_records = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(ExportLogsPartialSuccess, _impl_.rejected_log_records_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(ExportLogsPartialSuccess, _impl_.rejected_log_records_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 rejected_log_records = 1;
    {PROTOBUF_FIELD_OFFSET(ExportLogsPartialSuccess, _impl_.rejected_log_records_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string error_message = 2;
    {PROTOBUF_FIELD_OFFSET(ExportLogsPartialSuccess, _impl_.error_message_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\76\0\15\0\0\0\0\0"
    "opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess"
    "error_message"
  }},
};

PROTOBUF_NOINLINE void ExportLogsPartialSuccess::Clear() {
// @@protoc_insertion_point(message_clear_start:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.error_message_.ClearToEmpty();
  _impl_.rejected_log_records_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ExportLogsPartialSuccess::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ExportLogsPartialSuccess& this_ = static_cast<const ExportLogsPartialSuccess&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ExportLogsPartialSuccess::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ExportLogsPartialSuccess& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int64 rejected_log_records = 1;
          if (this_._internal_rejected_log_records() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<1>(
                    stream, this_._internal_rejected_log_records(), target);
          }

          // string error_message = 2;
          if (!this_._internal_error_message().empty()) {
            const std::string& _s = this_._internal_error_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess.error_message");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ExportLogsPartialSuccess::ByteSizeLong(const MessageLite& base) {
          const ExportLogsPartialSuccess& this_ = static_cast<const ExportLogsPartialSuccess&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ExportLogsPartialSuccess::ByteSizeLong() const {
          const ExportLogsPartialSuccess& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string error_message = 2;
            if (!this_._internal_error_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error_message());
            }
            // int64 rejected_log_records = 1;
            if (this_._internal_rejected_log_records() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_rejected_log_records());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ExportLogsPartialSuccess::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExportLogsPartialSuccess*>(&to_msg);
  auto& from = static_cast<const ExportLogsPartialSuccess&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_error_message().empty()) {
    _this->_internal_set_error_message(from._internal_error_message());
  }
  if (from._internal_rejected_log_records() != 0) {
    _this->_impl_.rejected_log_records_ = from._impl_.rejected_log_records_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExportLogsPartialSuccess::CopyFrom(const ExportLogsPartialSuccess& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:opentelemetry.proto.collector.logs.v1.ExportLogsPartialSuccess)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExportLogsPartialSuccess::InternalSwap(ExportLogsPartialSuccess* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_message_, &other->_impl_.error_message_, arena);
        swap(_impl_.rejected_log_records_, other->_impl_.rejected_log_records_);
}

::google::protobuf::Metadata ExportLogsPartialSuccess::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace v1
}  // namespace logs
}  // namespace collector
}  // namespace proto
}  // namespace opentelemetry
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_opentelemetry_2fproto_2fcollector_2flogs_2fv1_2flogs_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
